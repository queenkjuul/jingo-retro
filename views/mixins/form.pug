include links

mixin tools(action, pageName)
  if action == 'edit'
    .tools-list
      if pageName != 'home'
        span.tool-button
          form(action=`${proxyPath}/pages/${pageName}`, method="post", style="display:inline")
            input(type="hidden", name="_method", value="delete")
            input(type="submit", value="Delete this page").confirm-delete-page.btn.btn-default

  if action == 'show'
    .tools-list
      if !isAnonymous()
        span.tool-button
          +anchor("/pages/new")(title="Create new page").btn.btn-default
            i.icon.ion-plus-round
            span.tool-label Create new page
            div(class= noscript ? ".tool-spacer" : ".hidden")
      if !isAnonymous() && canEdit
        span.tool-button
          +anchor("/pages/" + pageName + "/edit")(title="Edit this page").btn.btn-default
            i.icon.ion-compose
            span.tool-label Edit this page
            div(width="8px", class= noscript ? ".tool-spacer" : ".hidden")
      span.tool-button
        +anchor("/wiki/" + pageName + "/history")(title="Page history").btn.btn-default
          i.icon.ion-clock
          span.tool-label Page History
          div(width="8px", class= noscript ? ".tool-spacer" : ".hidden")
      span.tool-button
        +anchor("/wiki")(title="All pages").btn.btn-default
          i.icon.ion-grid
          span.tool-label All Pages
          div(width="8px", class= noscript ? ".tool-spacer" : ".hidden")
      if canSearch()
        span.tool-button
          +anchor("/search")(title="Search through the pages").btn.btn-default
            i.icon.ion-search
            span.tool-label Search

  if action == 'history'
    div
      span.tool-button
        +anchor("/wiki")(title="All pages").btn.btn-default
          i.icon.ion-grid
          span.tool-label All Pages

mixin saveAndCancel(saveText)
  .well
    input(type='submit',value=saveText || 'Save',title='Save (Ctrl/Cmd+s)').btn.btn-primary
    |&nbsp;
    +anchor("/", "Cancel").btn

mixin errors(err)
  -var errors = locals.errors;
  - if (typeof(errors) != 'undefined' && Object.keys(errors).length > 0)
    .alert.bg-danger
      ul
        each v in errors
          li
            b= v.msg || v

mixin featuresStylesheets()
  +asset("/css/codemirror-ext.css")(type="text/css")
  +asset("/vendor/codemirror/codemirror.css")(type="text/css")
  +asset("/vendor/codemirror/fullscreen.css")(type="text/css")

mixin featuresJavaScripts()
  unless noscript
    +asset("/vendor/codemirror/codemirror.min.js")
    script.
      Jingo.cmInstance = CodeMirror.fromTextArea(document.getElementById('js--editor'), {
        lineNumbers: true,
        mode: 'gfm',
        matchBrackets: true,
        lineWrapping: true,
        extraKeys: {
          'Ctrl-Enter': function(cm) {
            Jingo.toggleFullscreen();
          },
          'Ctrl-S': function(cm) {
            Jingo.save();
          }
        }
      });
      Jingo.toolbar();

mixin warning()
  -var warning = locals.warning;
  - if (typeof(warning) != 'undefined')
    .alert.alert-block.alert-warning !{warning}

mixin notice()
  -var notice = locals.notice;
  - if (typeof(notice) != 'undefined')
    .alert.alert-block.alert-info.alert-dismissible !{notice}

mixin dialogBox(h)
  .modal-dialog
    .modal-content
      .modal-header
        button(data-dismiss="modal", aria-hidden="true").close &times;
        h3 #{h}
      .modal-body
      .modal-footer
